name: Despliegue de Información de Lanzamientos

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  REPOSITORIO_ECR: lanzamientos-spacex
  CLUSTER_ECS: cluster-spacex
  SERVICIO_ECS: servicio-spacex
  NOMBRE_CONTENEDOR: lanzamientos-spacex

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Ejecutar pruebas
      run: |
        pytest --cov=./ --cov-report=xml
    
    - name: Subir cobertura a Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml

  deploy-lambda:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configurar credenciales AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Desplegar función Lambda
      run: |
        cd infrastructure
        npm install -g aws-cdk
        cdk deploy --require-approval never PilaInformanteLanzamientos

  deploy-web:
    needs: deploy-lambda
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configurar credenciales AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Iniciar sesión en Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Construir, etiquetar y subir imagen a Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$REPOSITORIO_ECR:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$REPOSITORIO_ECR:$IMAGE_TAG
    
    - name: Actualizar servicio ECS
      run: |
        aws ecs update-service --cluster $CLUSTER_ECS --service $SERVICIO_ECS --force-new-deployment 